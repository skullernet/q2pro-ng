name: build

on:
  push:
    branches: [master, ci]
  pull_request:
    branches: [master]

env:
  MESON_ARGS: >-
    --auto-features=enabled
    --fatal-meson-warnings
    -Davcodec=disabled
    -Dpacketdup-hack=true
    -Dtests=true
    -Dwerror=true

  MESON_ARGS_WIN: >-
    -Dsdl2=disabled
    -Dwayland=disabled
    -Dwrap_mode=forcefallback
    -Dx11=disabled

  MESON_ARGS_LINUX: >-
    -Dwindows-crash-dumps=disabled
    -Dwrap_mode=nofallback

  MESON_ARGS_MACOS: >-
    -Dbuildtype=release
    -Dicmp-errors=disabled
    -Dpkg_config_path=/opt/homebrew/opt/openal-soft/lib/pkgconfig
    -Dwayland=disabled
    -Dwindows-crash-dumps=disabled
    -Dwrap_mode=nofallback
    -Dx11=disabled

  MESON_ARGS_FREEBSD: >-
    -Dbuildtype=release
    -Dc_std=c23
    -Dicmp-errors=disabled
    -Dwindows-crash-dumps=disabled
    -Dwrap_mode=nofallback

jobs:
  mingw:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        arch: ["i686", "x86_64"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: subprojects/packagecache
          key: ${{ hashFiles('subprojects/*.wrap') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64 nasm meson ninja-build

      - name: Build
        run: |
          meson setup --cross-file=.ci/${{ matrix.arch }}-w64-mingw32.txt \
          ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_WIN }} builddir
          meson compile -C builddir

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cc: [gcc, clang]
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y meson libsdl2-dev libopenal-dev \
          libpng-dev libjpeg-dev zlib1g-dev mesa-common-dev \
          libcurl4-gnutls-dev libx11-dev libxi-dev \
          libwayland-dev wayland-protocols libdecor-0-dev

      - name: Build
        run: |
          meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_LINUX }} builddir
          meson compile -C builddir
        env:
          CC: ${{ matrix.cc }}

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install meson sdl2 openal-soft libpng jpeg-turbo

      - name: Build
        run: |
          meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_MACOS }} builddir
          meson compile -C builddir

  freebsd:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Build
        uses: cross-platform-actions/action@v0.27.0
        with:
          operating_system: freebsd
          architecture: x86-64
          version: '14.2'
          run: |
            sudo pkg update
            sudo pkg install -y git meson pkgconf openal-soft \
            sdl2 curl png jpeg-turbo libx11 libdecor evdev-proto wayland-protocols
            meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_FREEBSD }} builddir
            meson compile -C builddir
